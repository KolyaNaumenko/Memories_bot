import os
from datetime import datetime, timedelta
from telegram import Update, InputFile
from telegram.ext import ContextTypes
from database import add_entry_to_db, get_entries

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
IMAGE_FOLDER = "images"
if not os.path.exists(IMAGE_FOLDER):
    os.makedirs(IMAGE_FOLDER)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∞—à –¥–Ω–µ–≤–Ω–∏–∫ –≤ Telegram. –í—ã –º–æ–∂–µ—Ç–µ:\n"
        "/add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å (—Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)\n"
        "/view_all - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏\n"
        "/view_day - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/view_week - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –Ω–µ–¥–µ–ª—é\n"
        "/view_month - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –º–µ—Å—è—Ü\n"
        "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü –∏ –≥–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, november2024), —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n"
        "/help - —Å–ø—Ä–∞–≤–∫–∞"
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å (—Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)\n"
        "/view_all - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏\n"
        "/view_day - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/view_week - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –Ω–µ–¥–µ–ª—é\n"
        "/view_month - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –º–µ—Å—è—Ü\n"
        "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü –∏ –≥–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, november2024), —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n"
        "/help - —Å–ø—Ä–∞–≤–∫–∞"
    )

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
async def add_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    entry = update.message.text if update.message.text else None
    image_path = None

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if update.message.photo:
        photo = update.message.photo[-1]  # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –Ω–∞–∏–ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ
        image_file = await photo.get_file()
        image_path = os.path.join(IMAGE_FOLDER, f"{user_id}_{datetime.now().strftime('%Y%m%d%H%M%S')}.jpg")
        await image_file.download(image_path)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    add_entry_to_db(user_id, date, entry, image_path)
    await update.message.reply_text("–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

# –í—ã–≤–æ–¥ –∑–∞–ø–∏—Å–µ–π
async def view_records(update: Update, context: ContextTypes.DEFAULT_TYPE, time_filter=None):
    user_id = update.effective_user.id
    now = datetime.now()

    if time_filter == "day":
        start_date = now.strftime("%Y-%m-%d 00:00:00")
        entries = get_entries(user_id, start_date=start_date)
    elif time_filter == "week":
        start_date = (now - timedelta(days=7)).strftime("%Y-%m-%d 00:00:00")
        entries = get_entries(user_id, start_date=start_date)
    elif time_filter == "month":
        start_date = now.replace(day=1).strftime("%Y-%m-%d 00:00:00")
        entries = get_entries(user_id, start_date=start_date)
    else:
        entries = get_entries(user_id)

    if entries:
        for entry in entries:
            date, text, image_path = entry
            message = f"üìÖ {date}:\n‚úèÔ∏è {text}" if text else f"üìÖ {date}:\n[–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ]"
            await update.message.reply_text(message)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            if image_path:
                with open(image_path, "rb") as img:
                    await update.message.reply_photo(photo=img)
    else:
        await update.message.reply_text("–ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–≤–æ–¥–∞ –∑–∞–ø–∏—Å–µ–π
async def view_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await view_records(update, context, time_filter=None)

async def view_day(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await view_records(update, context, time_filter="day")

async def view_week(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await view_records(update, context, time_filter="week")

async def view_month(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await view_records(update, context, time_filter="month")